import { Foco } from "@/lib/fonts";
import { ThemeProvider } from "@mui/material/styles";
import "./globals.css";
import Provider from "@/store/Provider";
import theme from "@/theme";
import Layout from "@/components/layout";

import { NextIntlClientProvider } from "next-intl";
import { getLocale, getMessages } from "next-intl/server";
export const metadata = {
    title: "KnowCrunch",
    description: "Generated by create next app",
    other: {
        "application/ld+json": JSON.stringify({
            "@context": "https://schema.org",
            "@type": "BreadcrumbList",
            "itemListElement": [
                {
                    "@type": "ListItem",
                    "position": 1,
                    "name": "Home",
                    "item": `${process.env.NEXT_PUBLIC_SITE_LINK}`
                },
                {
                    "@type": "ListItem",
                    "position": 2,
                    "name": "Courses",
                    "item": `${process.env.NEXT_PUBLIC_SITE_LINK}/courses`
                },
                {
                    "@type": "ListItem",
                    "position": 3,
                    "name": "Classroom Courses",
                    "item": `${process.env.NEXT_PUBLIC_SITE_LINK}/classroom-courses`
                }
            ]
        }),
        "Organization": JSON.stringify({
            "@context": "https://schema.org",
            "@type": "Organization",
            "name": "KnowCrunch",
            "url": `${process.env.NEXT_PUBLIC_SITE_LINK}`,
            "sameAs": [
                `${process.env.NEXT_PUBLIC_SITE_LINK}`,
                `${process.env.NEXT_PUBLIC_SITE_LINK}/courses`,
                `${process.env.NEXT_PUBLIC_SITE_LINK}/classroom-courses`
            ]
        })
    }
};

export default async function RootLayout({ children }) {
    const locale = await getLocale();
    const messages = await getMessages();

    return (
        <html lang={locale}>
            <body className={Foco.className}>
                <NextIntlClientProvider messages={messages}>
                    <Provider>
                        <ThemeProvider theme={theme}>
                            <Layout>{children}</Layout>
                        </ThemeProvider>
                    </Provider>
                </NextIntlClientProvider>
            </body>
        </html>
    );
}
